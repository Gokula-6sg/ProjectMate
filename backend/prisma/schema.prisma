// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  username String
  email    String     @unique
  password String
  skills   String[]
  rating   Int        @default(0)
  createAt DateTime   @default(now())
  Projects Projects[] @relation("UserProjects")

  resetTokens PasswordResetToken[]
  JoinRequest JoinRequest[]
}

model Projects {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  tags        String[]
  owner       User          @relation("UserProjects", fields: [ownerId], references: [id])
  ownerId     String        @db.ObjectId
  members     String[]
  createdAt   DateTime      @default(now())
  JoinRequest JoinRequest[]
}

model PasswordResetToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String   @unique
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model JoinRequest {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  message   String?
  status    String   @default("pending") // pending, accepted, rejected
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  project   Projects @relation(fields: [projectId], references: [id])
  projectId String   @db.ObjectId
}
